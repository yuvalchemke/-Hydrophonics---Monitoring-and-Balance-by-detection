///////RELAY
#define RELAY_PIN1 27 // ESP32 pin GIOP27 connected to the IN pin of relay
#define RELAY_PIN2 26 // ESP32 pin GIOP26 connected to the IN pin of relay
#define RELAY_PIN3 25 // ESP32 pin GIOP25 connected to the IN pin of relay

///////READING
#define RXp2 16
#define TXp2 17

///////PH
int analog_pin = 32; // Pin into which we connect the input voltage
int val ;  // variable to store the value read


String fromNano;
float fron_nano;

int pH_down;
int pH_up;
int PPM;

//---------------Thingspeak and wifi--------------------------------------
#include <WiFi.h>
#include "ThingSpeak.h"
unsigned long myChannelNumber = ;
const char * myWriteAPIKey = "";

const char* ssid = ""; // your wifi SSID name
const char* password = "" ;// wifi pasword
 
const char* server = "api.thingspeak.com";

WiFiClient client;

void setup() {
  // put your setup code here, to run once:
  Serial.begin(115200);
  Serial2.begin(9600, SERIAL_8N1, RXp2, TXp2);

  // initialize digital pin as an output.
  pinMode(RELAY_PIN1, OUTPUT);
  pinMode(RELAY_PIN2, OUTPUT);
  pinMode(RELAY_PIN3, OUTPUT);


  //---------------Thingspeak and wifi--------------------------------------
  WiFi.disconnect();
  delay(10);
  WiFi.begin(ssid, password);

  Serial.println();
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);
  
  ThingSpeak.begin(client);
 
  WiFi.begin(ssid, password);
  
 
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.print("NodeMcu connected to wifi...");
  Serial.println(ssid);
  Serial.println();
}


void loop() {
///////READING  
   Serial.println("Message Received: ");
   fromNano = Serial2.readString();
   int index = fromNano.indexOf('$');
   int index2 = fromNano.indexOf('@');
   String ppm = fromNano.substring(0,index);
   String temp = fromNano.substring(index+1,index2);
   float ppm_num = ppm.toFloat();
   float temp_num = temp.toFloat();
   Serial.println(ppm_num);
   Serial.println(temp_num);

  


///////PH  
  val = analogRead(analog_pin);  // read the input pin
  float phValue = ((-0.0036 * val) + 17.658); 
  Serial.print("pH: ");
  Serial.println(phValue);
  


///////RELAY
   if (ppm_num < 2400) {
    digitalWrite(RELAY_PIN1, LOW); // Open valve for 8 sec
    PPM=1;
    ThingSpeak.setField(4,PPM); // NPK pump
    ThingSpeak.writeFields(myChannelNumber,myWriteAPIKey);
    delay(8000);
   }
   
   digitalWrite(RELAY_PIN1, HIGH); // Close valve 
   PPM=0;
   ThingSpeak.setField(4,PPM); // NPK pump

  
  
    if (phValue > 7.5) {
     digitalWrite(RELAY_PIN2, LOW); // Open valve for 8 sec
     pH_down=1;
     ThingSpeak.setField(5,pH_down); // pump pH -
     ThingSpeak.writeFields(myChannelNumber,myWriteAPIKey);
     delay(8000);
    }
    digitalWrite(RELAY_PIN2, HIGH); // Close valve
    pH_down=0;
    ThingSpeak.setField(5,pH_down); // pump pH -
       
  

    if (phValue < 5.0) {
     digitalWrite(RELAY_PIN3, LOW); // Open valve for 8 sec 
     pH_up=1;
     ThingSpeak.setField(6,pH_up); // pump pH + 
     ThingSpeak.writeFields(myChannelNumber,myWriteAPIKey);
     delay(8000);
    }
    digitalWrite(RELAY_PIN3, HIGH); // Close valve
    pH_up=0;
    ThingSpeak.setField(6,pH_up); // pump pH + 
       
  //---------------wifi--------------------------------------
    if (WiFi.status() != WL_CONNECTED) {
        WiFi.begin(ssid, password);
        Serial.println();
        Serial.println();
        Serial.print("Connecting to ");
        Serial.println(ssid);
        
            ThingSpeak.begin(client);

        WiFi.begin(ssid, password);
    }

//-------------Thingspeak---------------------------------------------
  ThingSpeak.setField(1,phValue); // pH value
  ThingSpeak.setField(2,temp_num); // temprature in the water
  ThingSpeak.setField(3,ppm_num); // ppm in the water
 
  ThingSpeak.writeFields(myChannelNumber,myWriteAPIKey);

  Serial.println("uploaded to Thingspeak server....");

  client.stop();
 
  Serial.println("Waiting to upload next reading...");
  Serial.println();
  

  
  
delay(600000);

  
}
